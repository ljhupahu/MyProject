@startuml
actor Client

Client -> SubjectUtils: setSecurityManager(securityManager);
activate SubjectUtils
    SubjectUtils -> SubjectUtils: getSubject()
    activate SubjectUtils
        SubjectUtils -> Subject: login(token)
        Subject -> DefaultSecurityManager: login(subject, token)
        DefaultSecurityManager -> AuthenticatingSecurityManager: authenticate(AuthenticationToken token)
        AuthenticatingSecurityManager -> AbstractAuthenticator: authenticate(token);
        AbstractAuthenticator -> ModularRealmAuthenticator: doAuthenticate(AuthenticationToken authenticationToken)
        alt realms.size() == 1

        else realms.size() > 1
            ModularRealmAuthenticator -> AuthenticationStrategy:getAuthenticationStrategy()
            loop realms.size
                AuthenticationStrategy -> AuthenticationStrategy:beforeAllAttempts(realms, token)
                AuthenticationStrategy -> AuthenticationStrategy: beforeAttempt(Realm realm, AuthenticationToken token, AuthenticationInfo aggregate)
                AuthenticationStrategy -> AuthenticationStrategy: afterAttempt(Realm realm, AuthenticationToken token, AuthenticationInfo singleRealmInfo, AuthenticationInfo aggregateInfo, Throwable t)
                AuthenticationStrategy -> AuthenticationStrategy: afterAllAttempts(AuthenticationToken token, AuthenticationInfo aggregate)
            end
        end
    deactivate SubjectUtils
deactivate SubjectUtils

@enduml